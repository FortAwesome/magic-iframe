/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { MagicIframeEvent } from "./components/seb-magic-iframe/seb-magic-iframe-event.interface";
export namespace Components {
    interface SebMagicIframe {
        /**
          * Resize the iframe when the inner content changes height.
         */
        "autoResize": boolean;
        /**
          * Print debug log (console log).
         */
        "debug": boolean;
        /**
          * Set width of magic iframe to width of iframe content, useful when iframing fixed width pages.
         */
        "matchContentWidth": boolean | 'auto';
        /**
          * Prevent the iframe from growing infinitely by setting a max height i.e. prevent infinite loop for height value when iframe content height depends on container height.
         */
        "maxHeight": string;
        /**
          * Set a min width for the iframe.
         */
        "minWidth": string;
        /**
          * Force reload of iframe when source changes, useful for SPA:s that won't refresh otherwise.
         */
        "reloadOnChange": boolean;
        /**
          * Debounce time in milliseconds for resize event.
         */
        "resizeDebounce": number;
        /**
          * Sanitize url:s (both for iframe and external stylesheets) to prevent XSS attacks.
         */
        "sanitizeSource": boolean;
        /**
          * Scale content inside iframe to match with of iframe, useful when iframing fixed width pages.
         */
        "scaleContent": boolean;
        /**
          * Debounce time in milliseconds for scale event.
         */
        "scaleDebounce": number;
        /**
          * Url to iframe content.
         */
        "source": string;
        /**
          * Add one or more stylesheets to the iframe, note that the iframe won't be visible until they've loaded.
         */
        "styleUrls": Array<string>;
        /**
          * Apply/inject inline styles to the iframe.
         */
        "styles": string;
    }
}
declare global {
    interface HTMLSebMagicIframeElement extends Components.SebMagicIframe, HTMLStencilElement {
    }
    var HTMLSebMagicIframeElement: {
        prototype: HTMLSebMagicIframeElement;
        new (): HTMLSebMagicIframeElement;
    };
    interface HTMLElementTagNameMap {
        "seb-magic-iframe": HTMLSebMagicIframeElement;
    }
}
declare namespace LocalJSX {
    interface SebMagicIframe {
        /**
          * Resize the iframe when the inner content changes height.
         */
        "autoResize"?: boolean;
        /**
          * Print debug log (console log).
         */
        "debug"?: boolean;
        /**
          * Set width of magic iframe to width of iframe content, useful when iframing fixed width pages.
         */
        "matchContentWidth"?: boolean | 'auto';
        /**
          * Prevent the iframe from growing infinitely by setting a max height i.e. prevent infinite loop for height value when iframe content height depends on container height.
         */
        "maxHeight"?: string;
        /**
          * Set a min width for the iframe.
         */
        "minWidth"?: string;
        /**
          * Listen to events emitted by magic iframe e.g. <pre> const magicIframe = document.getElementById('magicIframe');<br> magicIframe.addEventListener('magicIframeEvent', $event => console.log($event.detail)); </pre>
         */
        "onMagicIframeEvent"?: (event: CustomEvent<MagicIframeEvent>) => void;
        /**
          * Force reload of iframe when source changes, useful for SPA:s that won't refresh otherwise.
         */
        "reloadOnChange"?: boolean;
        /**
          * Debounce time in milliseconds for resize event.
         */
        "resizeDebounce"?: number;
        /**
          * Sanitize url:s (both for iframe and external stylesheets) to prevent XSS attacks.
         */
        "sanitizeSource"?: boolean;
        /**
          * Scale content inside iframe to match with of iframe, useful when iframing fixed width pages.
         */
        "scaleContent"?: boolean;
        /**
          * Debounce time in milliseconds for scale event.
         */
        "scaleDebounce"?: number;
        /**
          * Url to iframe content.
         */
        "source"?: string;
        /**
          * Add one or more stylesheets to the iframe, note that the iframe won't be visible until they've loaded.
         */
        "styleUrls"?: Array<string>;
        /**
          * Apply/inject inline styles to the iframe.
         */
        "styles"?: string;
    }
    interface IntrinsicElements {
        "seb-magic-iframe": SebMagicIframe;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "seb-magic-iframe": LocalJSX.SebMagicIframe & JSXBase.HTMLAttributes<HTMLSebMagicIframeElement>;
        }
    }
}
